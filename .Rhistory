ggplot(aes(tf_idf,fct_reorder(word,tf_idf),fill=school))+
geom_col(show.legend = F)+
facet_wrap(~school,ncol=4,scale="free")+
labs(x="tf_idf",y=NULL)
philo_sentiment_afinn <- philo_tidy_all%>%
inner_join(get_sentiments("afinn"))
philo_sentiment_afinn%>%
group_by(school)%>%
summarise(senti_score=round(mean(value),2))%>%
ungroup()%>%
ggplot(data=.,aes(x=school,y=senti_score))+
geom_bar(stat="identity")+
geom_text(aes(label=senti_score),vjust=-0.3,size=2)+
theme(axis.text.x = element_text(angle=90,hjust=1))+
labs(title = "Overall Sentiment Score of Each School")+
ylab("Sentiment Sore")
philo_sentiment_nrc <- philo_tidy_all%>%
inner_join(get_sentiments("nrc"))
philo_sentiment_nrc%>%
group_by(school)%>%
count(sentiment)%>%
filter(school %in% listname)%>%
ggplot(aes(sentiment,n,fill=school))+
geom_col(show.legend = F)+
theme(axis.text.x = element_text(angle=30,hjust=1))+
facet_wrap(~school, ncol=4, scale="free")+
labs(x="sentiment",y=NULL)
philo_sentiment_bing <- philo_tidy_all%>%
inner_join(get_sentiments("bing"))
philo_sentiment_bing%>%
group_by(school)%>%
count(sentiment)%>%
ungroup()%>%
ggplot(aes(n,school,fill=sentiment))+
geom_col(position="fill")+
labs(title="Negative-Positive Ratio by bing lexicon",y="School")
library(tidyr)
library(reshape2)
philo_wf_all_prop <- philo_wf_all%>%
group_by(school)%>%
mutate(proportion = n/sum(n))%>%
select(-n)%>%
pivot_wider(names_from = school,values_from = proportion)%>%
na.omit()
cormat <- -1*round(cor(philo_wf_all_prop[,2:14]),2)
melted_cormat <- melt(cormat)
ggplot(melted_cormat,aes(Var2,Var1,fill=value))+
geom_tile()+
scale_fill_distiller(palette = "Greens")+
geom_text(aes(Var2,Var1,label=-value),color="black",size=2)+
theme(axis.text.x=element_text(angle=90,vjust=1))+
coord_fixed()+
labs(title="Word Frequency Correlation",x=NULL,y=NULL)
library(pheatmap)
pheatmap(-1*cormat,color=hcl.colors(50,"Greens"),display_numbers = T,number_color = "black", fontsize = 7)
library(scales)
pheno_scatter <- philo_wf_all_prop[,c("word","phenomenology","german_idealism","analytic","continental")]
pheno_scatter <- pheno_scatter%>%
pivot_longer("german_idealism":"continental", names_to="school",values_to = "proportion")
names(pheno_scatter)[2] <- "phenomenology"
ggplot(pheno_scatter,aes(x=phenomenology*10,y=proportion*10))+
geom_point(size=0.5)+
facet_wrap(~school,ncol=3)
ggplot(pheno_scatter, aes(x = proportion, y = phenomenology,
color = abs(phenomenology - proportion))) +
geom_abline(color = "gray40", lty = 2) +
geom_jitter(alpha = 0.1, size = 2.5, width = 0.3, height = 0.3) +
geom_text(aes(label = word), check_overlap = TRUE, vjust = 1.5,size=3) +
scale_x_log10(labels = percent_format()) +
scale_y_log10(labels = percent_format()) +
scale_color_gradient(limits = c(0, 0.001),
low = "darkslategray4", high = "black") +
facet_wrap(~school, ncol = 3) +
theme(legend.position="none") +
labs(y = "Phenomenology", x = NULL)
german_scatter <- philo_wf_all_prop[,c("word","german_idealism","continental")]
german_scatter <- german_scatter%>%
pivot_longer("continental", names_to="school",values_to = "proportion")
names(german_scatter)[2] <- "german_idealism"
ggplot(german_scatter, aes(x = proportion, y = german_idealism,
color = abs(german_idealism - proportion))) +
geom_abline(color = "gray40", lty = 2) +
geom_jitter(alpha = 0.1, size = 2.5, width = 0.3, height = 0.3) +
geom_text(aes(label = word), check_overlap = TRUE, vjust = 1.5,size=3) +
scale_x_log10(labels = percent_format()) +
scale_y_log10(labels = percent_format()) +
scale_color_gradient(limits = c(0, 0.001),
low = "darkslategray4", high = "black") +
theme(legend.position="none") +
labs(y = "German Idealism", x = NULL)
empiricism_scatter <- philo_wf_all_prop[,c("word","empiricism","rationalism","stoicism","aristotle")]
empiricism_scatter <- empiricism_scatter%>%
pivot_longer('rationalism':'aristotle', names_to="school",values_to = "proportion")
names(empiricism_scatter)[2] <- "empiricism"
ggplot(empiricism_scatter, aes(x = proportion, y = empiricism,
color = abs(empiricism - proportion))) +
geom_abline(color = "gray40", lty = 2) +
geom_jitter(alpha = 0.1, size = 2.5, width = 0.3, height = 0.3) +
geom_text(aes(label = word), check_overlap = TRUE, vjust = 1.5,size=3) +
scale_x_log10(labels = percent_format()) +
scale_y_log10(labels = percent_format()) +
scale_color_gradient(limits = c(0, 0.001),
low = "darkslategray4", high = "black") +
facet_wrap(~school, ncol = 3) +
theme(legend.position="none") +
labs(y = "Empiricism", x = NULL)
continental_scatter <- philo_wf_all_prop[,c("word","analytic","continental")]
continental_scatter <- continental_scatter%>%
pivot_longer("analytic", names_to="school",values_to = "proportion")
names(continental_scatter)[2] <- "continental"
ggplot(continental_scatter, aes(x = proportion, y = continental,
color = abs(continental - proportion))) +
geom_abline(color = "gray40", lty = 2) +
geom_jitter(alpha = 0.1, size = 2.5, width = 0.3, height = 0.3) +
geom_text(aes(label = word), check_overlap = TRUE, vjust = 1.5,size=3) +
scale_x_log10(labels = percent_format()) +
scale_y_log10(labels = percent_format()) +
scale_color_gradient(limits = c(0, 0.001),
low = "darkslategray4", high = "black") +
theme(legend.position="none") +
labs(y = "continental", x = NULL)
nietzsche_scatter <- philo_wf_all_prop[,c("word","nietzsche","plato")]
nietzsche_scatter <- nietzsche_scatter%>%
pivot_longer("plato", names_to="school",values_to = "proportion")
names(nietzsche_scatter)[2] <- "nietzsche"
ggplot(nietzsche_scatter, aes(x = proportion, y = nietzsche,
color = abs(nietzsche - proportion))) +
geom_abline(color = "gray40", lty = 2) +
geom_jitter(alpha = 0.1, size = 2.5, width = 0.3, height = 0.3) +
geom_text(aes(label = word), check_overlap = TRUE, vjust = 1.5,size=3) +
scale_x_log10(labels = percent_format()) +
scale_y_log10(labels = percent_format()) +
scale_color_gradient(limits = c(0, 0.001),
low = "darkslategray4", high = "black") +
theme(legend.position="none") +
labs(y = "Nietzche", x = NULL)
library(corpus)
data_cor <- data%>%
select(school, sentence_length,sentence_lowered)
names(data_cor) <- c("school","length","text")
data_cor <- as_corpus_frame(data_cor)
library(sentimentr)
sentiments <- sentiment_by(data_cor$text)
install.packages("tm")
library(tm)
library(corpus)
library(tm)
data_cor <- data%>%
select(school, sentence_length,sentence_lowered)
View(data_cor)
library(sentimentr)
sentiments <- sentiment_by(data_cor$text)
sentiments <- sentiment(data_cor$text)
data_cor <- data%>%
select(school, sentence_length,sentence_lowered)
names(data_cor) <- c("school","length","text")
sentiments <- sentiment(data_cor$text)
View(rationalism_wf)
View(sentiments)
View(philo_sentiment_nrc)
philo_sentiment_clustering <- philo_sentiment_nrc%>%
select(school,word,sentiment)
View(philo_sentiment_clustering)
philo_sentiment <- philo_sentiment_nrc%>%
select(school,word,sentiment)
philo_sentiment_clustering <- philo_sentiment%>%
group_by(school)%>%
count(sentiment)%>%
ungroup()
View(philo_sentiment_clustering)
philo_sentiment_clustering <- philo_sentiment%>%
group_by(school)%>%
count(sentiment)%>%
ungroup()%>%
pivot_wider(names_from = school,values_from = sentiment)%>%
na.omit()
philo_sentiment_clustering <- philo_sentiment%>%
group_by(school)%>%
count(sentiment)%>%
ungroup()
philo_sentiment_clustering <- philo_sentiment%>%
group_by(school)%>%
count(sentiment)%>%
ungroup()%>%
pivot_wider(names_from = sentiment,values_from = n)%>%
na.omit()
View(philo_sentiment_clustering)
philo_sentiment_clustering <- philo_sentiment%>%
group_by(school)%>%
count(sentiment)%>%
ungroup()%>%
pivot_wider(names_from = sentiment,values_from = n)
library(cluster)
sentiment_cluster <- kmeans(philo_sentiment,centers=3)
sentiment_cluster <- kmeans(philo_sentiment,centers=3,nstart=25)
View(philo_sentiment)
sentiment_cluster <- kmeans(philo_sentiment_clustering,centers=3,nstart=25)
View(philo_sentiment_clustering)
rownames(philo_sentiment_clustering) <- philo_sentiment_clustering$school
View(philo_sentiment_clustering)
philo_sentiment_clustering[,-1]
philo_sentiment_clustering <- philo_sentiment_clustering[,-1]
sentiment_cluster <- kmeans(philo_sentiment_clustering,centers=3,nstart=25)
View(sentiment_cluster)
sentiment_cluster[["cluster"]]
rownames(philo_sentiment_clustering)
View(philo_sentiment_clustering)
rownames(philo_sentiment_clustering) <- philo_sentiment_clustering$school
philo_sentiment_clustering <- philo_sentiment_clustering[,-1]
sentiment_cluster <- kmeans(philo_sentiment_clustering,centers=3,nstart=25)
View(philo_sentiment_clustering)
rownames(philo_sentiment_clustering) <- philo_sentiment_clustering$school
View(philo_sentiment_clustering)
philo_sentiment <- philo_sentiment_nrc%>%
select(school,word,sentiment)
rownames(philo_sentiment_clustering) <- philo_sentiment_clustering$school
philo_sentiment_clustering <- philo_sentiment_clustering[,-1]
View(philo_sentiment_clustering)
philo_sentiment_clustering <- philo_sentiment%>%
group_by(school)%>%
count(sentiment)%>%
ungroup()%>%
pivot_wider(names_from = sentiment,values_from = n)
rownames(philo_sentiment_clustering) <- philo_sentiment_clustering$school
View(philo_sentiment_clustering)
sentiment_cluster <- kmeans(philo_sentiment_clustering[,2:11],centers=3,nstart=25)
View(sentiment_cluster)
View(philo_sentiment_clustering)
sentiment_cluster <- kmeans(philo_sentiment_clustering[,2:11],centers=3,nstart=25)
View(sentiment_cluster)
sentiment_cluster
install.packages(factoextra)
library(factoextra)
fviz_cluster(sentiment_cluster,data=philo_sentiment_clustering[,2:11])
fviz_cluster()
?fviz_cluster
fviz_cluster(sentiment_cluster,data=philo_sentiment_clustering,)
fviz_cluster(sentiment_cluster,data=philo_sentiment_clustering)
fviz_cluster(sentiment_cluster,data=philo_sentiment_clustering[,2:11])
View(philo_sentiment_clustering)
fviz_cluster(sentiment_cluster,data=philo_sentiment_clustering[,2:11],geom = "text")
View(philo_sentiment_nrc)
View(philo_sentiment_clustering)
rownames(philo_sentiment_clustering)
philo_sentiment_clustering <- as.data.frame(philo_sentiment_clustering)
rownames(philo_sentiment_clustering) <- philo_sentiment_clustering$school
sentiment_cluster <- kmeans(philo_sentiment_clustering[,2:11],centers=3,nstart=25)
fviz_cluster(sentiment_cluster,data=philo_sentiment_clustering[,2:11],geom = "text")
philo_sentiment_clustering <- philo_sentiment%>%
group_by(school)%>%
summarize(count(sentiment)/sum(count(sentiment)))%>%
ungroup()%>%
pivot_wider(names_from = sentiment,values_from = n)
philo_sentiment_clustering <- philo_sentiment%>%
group_by(school)%>%
count(sentiment)%>%
ungroup()
View(philo_sentiment_clustering)
philo_sentiment_clustering <- philo_sentiment%>%
group_by(school)%>%
count(sentiment)%>%
summarise(porp = n/sum(n))
philo_sentiment_clustering <- philo_sentiment%>%
group_by(school)%>%
count(sentiment)%>%
mutate(porp = n/sum(n))
philo_sentiment_clustering <- philo_sentiment%>%
group_by(school)%>%
count(sentiment)%>%
mutate(porp = n/sum(n))%>%
pivot_wider(names_from = sentiment,values_from = porp)
philo_sentiment_clustering <- philo_sentiment%>%
group_by(school)%>%
count(sentiment)%>%
mutate(porp = n/sum(n))%>%
pivot_wider(names_from = sentiment,values_from = porp)
View(philo_sentiment_clustering)
philo_sentiment_clustering <- philo_sentiment%>%
group_by(school)%>%
count(sentiment)%>%
mutate(porp = n/sum(n))%>%
remove(n)%>%
pivot_wider(names_from = sentiment,values_from = porp)
select(-n%>%
philo_sentiment_clustering <- philo_sentiment%>%
group_by(school)%>%
count(sentiment)%>%
mutate(porp = n/sum(n))%>%
select(-n)%>%
pivot_wider(names_from = sentiment,values_from = porp)
View(philo_sentiment_clustering)
View(philo_sentiment_clustering)
philo_sentiment_clustering <- philo_sentiment%>%
group_by(school)%>%
count(sentiment)%>%
mutate(porp = n/sum(n))
View(philo_sentiment_clustering)
philo_sentiment_clustering <- philo_sentiment%>%
group_by(school)%>%
count(sentiment)%>%
mutate(prop = n/sum(n))
philo_sentiment_clustering <- philo_sentiment_clustering%>%
select(school,sentiment,prop)%>%
pivot_wider(names_from = sentiment,values_from = prop)
philo_sentiment_clustering <- as.data.frame(philo_sentiment_clustering)
rownames(philo_sentiment_clustering) <- philo_sentiment_clustering$school
sentiment_cluster <- kmeans(philo_sentiment_clustering[,2:11],centers=3,nstart=25)
fviz_cluster(sentiment_cluster,data=philo_sentiment_clustering[,2:11],geom = "text")
sentiment_cluster <- kmeans(philo_sentiment_clustering[,2:11],centers=4,nstart=25)
fviz_cluster(sentiment_cluster,data=philo_sentiment_clustering[,2:11],geom = "text")
sentiment_cluster <- kmeans(philo_sentiment_clustering[,2:11],centers=3,nstart=50)
fviz_cluster(sentiment_cluster,data=philo_sentiment_clustering[,2:11],geom = "text")
sentiment_cluster <- kmeans(philo_sentiment_clustering[,2:11],centers=3,nstart=100)
fviz_cluster(sentiment_cluster,data=philo_sentiment_clustering[,2:11],geom = "text")
sentiment_cluster <- kmeans(philo_sentiment_clustering[,2:11],centers=5,nstart=100)
fviz_cluster(sentiment_cluster,data=philo_sentiment_clustering[,2:11],geom = "text")
sentiment_cluster <- kmeans(philo_sentiment_clustering[,2:11],centers=2,nstart=100)
fviz_cluster(sentiment_cluster,data=philo_sentiment_clustering[,2:11],geom = "text")
sentiment_cluster <- kmeans(philo_sentiment_clustering[,2:11],centers=2,nstart=100)
fviz_cluster(sentiment_cluster,data=philo_sentiment_clustering[,2:11],geom = "text")
sentiment_cluster <- kmeans(philo_sentiment_clustering[,2:11],centers=3,nstart=100)
fviz_cluster(sentiment_cluster,data=philo_sentiment_clustering[,2:11],geom = "text")
library(cluster)
library(factoextra)
philo_sentiment <- philo_sentiment_nrc%>%
select(school,word,sentiment)
philo_sentiment_clustering <- philo_sentiment%>%
group_by(school)%>%
count(sentiment)%>%
mutate(prop = n/sum(n))
philo_sentiment_clustering <- philo_sentiment_clustering%>%
select(school,sentiment,prop)%>%
pivot_wider(names_from = sentiment,values_from = prop)
philo_sentiment_clustering <- as.data.frame(philo_sentiment_clustering)
rownames(philo_sentiment_clustering) <- philo_sentiment_clustering$school
sentiment_cluster <- kmeans(philo_sentiment_clustering[,2:11],centers=3,nstart=100)
fviz_cluster(sentiment_cluster,data=philo_sentiment_clustering[,2:11],geom = "text")
fviz_nbclust(philo_sentiment_clustering,sentiment_cluster,method="wss")
fviz_nbclust(philo_sentiment_clustering[,2:11],sentiment_cluster,method="wss")
fviz_nbclust(philo_sentiment_clustering[,2:11],kmeans,method="wss")
sentiment_cluster <- kmeans(philo_sentiment_clustering[,2:11],centers=3,nstart=10)
fviz_cluster(sentiment_cluster,data=philo_sentiment_clustering[,2:11],geom = "text")
fviz_cluster(sentiment_cluster,data=philo_sentiment_clustering[,2:11],geom = "text")
fviz_nbclust(philo_sentiment_clustering[,2:11],kmeans,method="wss")
cormat
philo_wf_all_prop
View(philo_wf_all_prop)
wf_clustering <- t(philo_wf_all_prop)
View(wf_clustering)
wf_clustering <- as.data.frame(wf_clustering)
names(wf_clustering) <- wf_clustering[1,]
View(philo_tidy_all)
wf_clustering <- wf_clustering[2:14,]
wf_cluster <- kmeans(wf_clustering,centers = 3, nstart=25)
fviz_cluster(wf_cluster,wf_clustering)
fviz_cluster(wf_cluster,data=wf_clustering)
View(wf_clustering)
wf_cluster <- kmeans(wf_clustering,centers = 3, nstart=25)
View(wf_cluster)
wf_clustering <- t(100*philo_wf_all_prop)
wf_clustering <- t(philo_wf_all_prop)
wf_clustering <- as.data.frame(wf_clustering)
names(wf_clustering) <- wf_clustering[1,]
wf_clustering <- 100*wf_clustering[2:14,]
wf_clustering <- wf_clustering[2:14,]
View(wf_clustering)
wf_clustering <- 100*wf_clustering
wf_clustering <- 100%*%wf_clustering
wf_cluster
wf_clustering
View(wf_cluster)
wf_cluster
philo_wf_all_prop <- philo_wf_all%>%
group_by(school)%>%
mutate(proportion = n/sum(n)*1000)%>%
select(-n)%>%
pivot_wider(names_from = school,values_from = proportion)%>%
na.omit()
cormat <- -1*round(cor(philo_wf_all_prop[,2:14]),2)
melted_cormat <- melt(cormat)
ggplot(melted_cormat,aes(Var2,Var1,fill=value))+
geom_tile()+
scale_fill_distiller(palette = "Greens")+
geom_text(aes(Var2,Var1,label=-value),color="black",size=2)+
theme(axis.text.x=element_text(angle=90,vjust=1))+
coord_fixed()+
labs(title="Word Frequency Correlation",x=NULL,y=NULL)
ggplot(melted_cormat,aes(Var2,Var1,fill=value))+
geom_tile()+
scale_fill_distiller(palette = "Greens")+
geom_text(aes(Var2,Var1,label=-value),color="black",size=2)+
theme(axis.text.x=element_text(angle=90,vjust=1))+
coord_fixed()+
labs(title="Word Frequency Correlation",x=NULL,y=NULL)
library(pheatmap)
pheatmap(-1*cormat,color=hcl.colors(50,"Greens"),display_numbers = T,number_color = "black", fontsize = 7)
pheatmap(-1*cormat,color=hcl.colors(50,"Greens"),display_numbers = T,number_color = "black", fontsize = 7)
wf_clustering <- t(philo_wf_all_prop)
pheatmap(-1*cormat,color=hcl.colors(50,"Greens"),display_numbers = T,number_color = "black", fontsize = 7)
wf_clustering <- t(philo_wf_all_prop)
wf_clustering <- as.data.frame(wf_clustering)
names(wf_clustering) <- wf_clustering[1,]
wf_clustering <- wf_clustering[2:14,]
wf_cluster <- kmeans(wf_clustering,centers = 3, nstart=25)
wf_cluster
fviz_cluster(wf_cluster,data=wf_clustering)
wf_cluster <- kmeans(wf_clustering,centers = 3, nstart=25)
wf_cluster$cluster
pheatmap(-1*cormat,color=hcl.colors(50,"Greens"),display_numbers = T,number_color = "black", fontsize = 7)
View(philo_wf_all_prop)
listname
data <- read.csv("philosophy_data.csv")
getwd()
setwd("~/Downloads/Columbia University/Fall2022/STAT4243/Project1/fall2022-project1-judywu4800")
data <- read.csv("data/philosophy_data.csv")
data <- read.csv("/data/philosophy_data.csv")
getwd()
data <- read.csv("/./data/philosophy_data.csv")
data <- read.csv("./data/philosophy_data.csv")
data <- read.csv("./data/philosophy_data.csv")
data <- read.csv("data/philosophy_data.csv")
data <- read.csv("data/philosophy_data.csv")
data <- read.csv("/Users/xxxxoxygene/Downloads/Columbia University/Fall2022/STAT4243/Project1/fall2022-project1-judywu4800/data/philosophy_data.csv")
unique(data$school)
#import packages
library(dplyr)
library(ggplot2)
library(tidytext)
library(wordcloud)
library(RColorBrewer)
library(tidyr)
library(reshape2)
library(cluster)
library(factoextra)
library(scales)
library(cluster)
library(factoextra)
data <- read.csv("/Users/xxxxoxygene/Downloads/Columbia University/Fall2022/STAT4243/Project1/fall2022-project1-judywu4800/data/philosophy_data.csv")
data%>%
group_by(school)%>%
count(school)%>%
ggplot(data=.,aes(x=school,y=n))+
geom_bar(stat="identity")+
geom_text(aes(label=n),vjust=-0.3,size=2)+
theme(axis.text.x = element_text(angle=90,hjust=1))+
labs(title = "Number of Quotes in Each School")+
ylab("Number of Quotes")
data <- read.csv("/Users/xxxxoxygene/Downloads/Columbia University/Fall2022/STAT4243/Project1/fall2022-project1-judywu4800/data/philosophy_data.csv")
data%>%
group_by(school)%>%
count(school)%>%
ggplot(data=.,aes(x=school,y=n))+
geom_bar(stat="identity")+
geom_text(aes(label=n),vjust=-0.3,size=2)+
theme(axis.text.x = element_text(angle=90,hjust=1))+
labs(title = "Number of Quotes in Each School")+
ylab("Number of Quotes")
knitr::opts_chunk$set(fig.width=unit(18,"cm"), fig.height=unit(11,"cm"))
data%>%
group_by(school)%>%
count(school)%>%
ggplot(data=.,aes(x=school,y=n))+
geom_bar(stat="identity")+
geom_text(aes(label=n),vjust=-0.3,size=2)+
theme(axis.text.x = element_text(angle=90,hjust=1))+
labs(title = "Number of Quotes in Each School")+
ylab("Number of Quotes")
data%>%
group_by(school)%>%
count(school)%>%
ggplot(data=.,aes(x=school,y=n))+
geom_bar(stat="identity")+
geom_text(aes(label=n),vjust=-0.3,size=2)+
theme(axis.text.x = element_text(angle=45,hjust=1))+
labs(title = "Number of Quotes in Each School")+
ylab("Number of Quotes")
knitr::opts_chunk$set(fig.width=unit(15,"cm"), fig.height=unit(10,"cm"))
data%>%
group_by(school)%>%
count(school)%>%
ggplot(data=.,aes(x=school,y=n))+
geom_bar(stat="identity")+
geom_text(aes(label=n),vjust=-0.3,size=2)+
theme(axis.text.x = element_text(angle=45,hjust=1))+
labs(title = "Number of Quotes in Each School")+
ylab("Number of Quotes")
philo_data <- data%>%
select(school,author,title,sentence_length,tokenized_txt)%>%
group_by(school)%>%
mutate(sentence.no = row_number())
listname <- sort(unique(philo_data$school))
colnames(philo_data)[5] <- "text"
philo_school <- group_split(philo_data)
#get tidy text format for each school of text
philo_school_tidy <- list()
for(i in 1:13){
philo_school_tidy[[i]] <- philo_school[[i]]%>%
unnest_tokens(word,text)
}
names(philo_school_tidy) <- listname
#exclude stop words from the tidy text
data("stop_words")
for (i in 1:13) {
philo_school_tidy[[i]] <- philo_school_tidy[[i]]%>%
anti_join(stop_words)
}
word_freq <- list()
for(i in 1:13){
word_freq[[i]] <- philo_school_tidy[[i]]%>%
count(word,sort=T)
}
names(word_freq) <- listname
